$colors: (
    base-background: #c4c4c4,
    semilight-background: lighten(#c4c4c4, 8%),
    light-background: lighten(#c4c4c4, 20%),
    semidark-background: darken(#c4c4c4, 20%),
    dark-background: darken(#c4c4c4, 80%),
    base-primary: #ffa800,
    dark-primary: darken(#ffa800, 5%),
    base-text: #111111,
    light-text: lighten(#111111, 90%),
    success: green,
    error: red,
);

/* Font family variable */
$font-stack: (
    header: ('Kodchasan', sans-serif),
    text: ('Open Sans', sans-serif)
);

/* Font size varable */
$font-sizes: (
    h1: 4em,
    h2: 3em,
    h3: 2.5em,
    h4: 1.8em,
    h5: 1.4em,
    h6: 1.2em
);

/* Breaking points varables */
$desktop: 1200px;
$tablet: 768px;
$mobile: 576px;

/* Functions for easy access to sass maps */
@function color($color-name) {
    @return map-get($colors, $color-name);
}

@function font($font-name) {
    @return map-get($font-stack, $font-name);
}

@function font-size($size) {
    @return map-get($font-sizes, $size);
}

/* Functions to add breaking point specific code */
@mixin tablet {
    @media (min-width: #{$mobile}) and (max-width: #{$tablet}) {
        @content;
    }
}

@mixin mobile {
    @media (max-width: #{$mobile}) {
        @content;
    }
}

/* Main design elements */
body {
    height: 100%;
    margin: 0;
    padding: 0;
    position: relative;
    background-color: color(dark-background);
    font-family: font(text);
    font-size: font-size(h6);
}
img {
    max-width: 100%;
    height: auto;
}
h1 {
    font-family: font(header);
    font-size: font-size(h1);
    color: color(light-text);
    text-transform: uppercase;
    @include mobile {
        font-size: font-size(h2);
    }
}
h2 {
    font-family: font(header);
    font-size: font-size(h2);
    @include mobile {
        font-size: font-size(h3);
    }
}
h3 {
    font-family: font(header);
    font-size: font-size(h3);
}
h4 {
    font-family: font(header);
    font-size: font-size(h4);
}
h5 {
    font-family: font(header);
    font-size: font-size(h5);
}
h6 {
    font-family: font(header);
    font-size: font-size(h6);
}
.success-text {
    color: color(success);
}
.error-text {
    color: color(error);
}

/* table styling */
table {
    width: 100%;
    border-collapse: collapse;
}

tr:nth-of-type(odd) {
background: color(light-background);
}
tr:nth-of-type(even) {
background: color(semilight-background);
}

th {
background: color(dark-background);
color: color(light-text);
font-weight: bold;
text-align: left;
}

td, th {
padding: 0.8em;
border: 1px solid color(dark-background);
text-align: left;
}
@include mobile {
    table, thead, tbody, th, td, tr {
        display: block;
    }
    /* Hide table headers (but not display: none;, for accessibility) */
    thead tr {
        position: absolute;
        top: -9999px;
        left: -9999px;
    }
    tr {
        border: 1px solid color(dark-background);
        margin-bottom: 1em;
    }
    td {
        /* Behave  like a "row" */
        border: none;
        border-bottom: 1px solid color(semidark-background);
        position: relative;
        padding-left: 50%;
    }
    td:before {
        /* Now like a table header */
        position: absolute;
        /* Top/left values mimic padding */
        top: 0.8em;
        left: 0.8em;
        width: 45%;
        padding-right: 10px;
        white-space: nowrap;
    }
    /*
        Label the data
        */
    .course-table td:nth-of-type(1):before {
        content: "Kurskod:";
    }
    .course-table td:nth-of-type(2):before {
        content: "Kursnamn:";
    }
    .course-table td:nth-of-type(3):before {
        content: "Progression:";
    }
    .course-table td:nth-of-type(4):before {
        content: "Kursplan:";
    }
    .course-table td:nth-of-type(5):before {
        content: "Inst√§llningar:";
    }
}